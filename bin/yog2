#!/usr/bin/env node

var Liftoff = require('liftoff');
var argv = require('minimist')(process.argv.slice(2));
var path = require('path');
var fs = require('fs');
var cli = new Liftoff({
    name: 'yog2', // 命令名字
    processTitle: 'yog2',
    moduleName: 'yog2/yog2-fis3.js',
    configName: 'fis-conf',

    // only js supported!
    extensions: {
        '.js': null
    }
});

for (var i = process.argv.length - 1; i >= 0; i--) {
    if (process.argv[i] === '--fis2') {
        process.argv.splice(i, 1);
    }
};



cli.launch({
    cwd: argv.r || argv.root,
    configPath: argv.f || argv.file
}, function (env) {
    var fis, useAsync, engine;

    try {
        var conf = fs.readFileSync(env.configPath).toString();
        if (conf.match(/\/\*\s?fis3-enable\s?\*\//img) || conf.match(/\/\/\s?fis3-enable/img)) {
            argv.fis3 = true;
        } else if (conf.match(/\/\*\s?fis3-async-enable\s?\*\//img) || conf.match(/\/\/\s?fis3-async-enable/img)) {
            argv.fis3 = true;
            useAsync = true;
        }
    }
    catch (e) {}

    if ((!argv.F && !argv.fis3 && process.env.YOG_MODE !== 'fis3') || argv.fis2) {
        require('../yog2.js').cli.run(process.argv);
        return;
    }

    delete argv.F;
    delete argv.fis3;
    delete argv.fis2;


    if (!env.modulePath) {
        fis = require('../yog2-fis3.js');
    }
    else {
        fis = require(env.modulePath);
    }

    var engine;
    if (useAsync) {
        if (typeof fis !== 'function') {
            console.error('\x1b[31m%s\x1b[0m', 'The yog module at [' + env.modulePath + '] dont support fis3-async.');
            return;
        }

        try {
            engine = require('fis3-async');
        } catch (e) {
            var message = e.message;

            if (~message.indexOf('Cannot find')) {
                message = 'Can\'t find module `fis3-async`, please run `npm i -g fis3-async`';
            }

            console.error('\x1b[31m%s\x1b[0m', message);
            return;
        }
    }
    fis = typeof fis === 'function' ? fis(engine) : fis;
    fis.IS_FIS3 = true;
    fis.require.paths.unshift(path.join(env.cwd, 'node_modules'));
    fis.require.paths.push(path.join(path.dirname(__dirname), 'node_modules'));
    fis.require.paths.push(path.join(path.join(path.dirname(__dirname), 'node_modules', 'fis3', 'node_modules')));
    fis.cli.run(argv, env);
});
